install.packages("BETS")
install.packages("BETS")
install.packages("forecast")
install.packages("curl")
install.packages("curl")
install.packages("curl")
install.packages("DBI")
install.packages("RMySQL")
install.packages("RMySQL")
install.packages("BETS")
install.packages("BETS")
require(BETS)
dados <-  BETS.sidra.get(x = c(3653), from = c("200201"), to = c("201710"), territory = "brazil",
variable = 3134, sections = c(129316), cl = 544)
dados <- ts(dados$serie_3653$Valor,start = c(2002,01),frequency = 12)
dados
plot.ts(dados)
acf(dados)
auto.arima(dados)
install.packages("TSA")
acf(dados,lag.max=48)
auto.arima(dados)
require(forecast)
auto.arima(dados)
require(TSA)
adf.test(dados)
monthplot(dados)
plot(decompose(dados))
kruskal.test(dados,cycle(dados))
dados = diff(dados)
acf(dados)
pacf(dados)
require(forecast)
modelo = auto.arima(dados)
modelo
tsdiag(modelo)
dados
install.packages(normtest)
install.packages("normtest")
require(normtest)
shapiro.test(modelo$residuals)
dados_cortado <- window(dados,start = c(2011,01),freq = 12)
dados_cortado
tsdiag(modelo)
modelo2 <- auto.arima(dados_cortado)
modelo2
tsdiag(modelo2)
tsdiag(modelo2,gof.lag = 15)
shapiro.test(modelo2$residuals)
comparacao <- window(dados_cortado,start = c(2017,01),freq=12)
dados_cortado_modelo <- window(dados,start = c(2011,01),end=c(2016,12),freq=12)
modelo2 <- auto.arima(dados_cortado_modelo)
modelo2
BETS.t_test(modelo2)
modelo_ajustado <- Arima(dados_cortado_modelo,order = c(0,0,1),seazonal = c(0,0,1),method = "ML")
modelo_ajustado <- Arima(dados_cortado_modelo,order = c(0,0,1),seazonal = c(0,0,1))
BETS.t_test(modelo_ajustado)
modelo_ajustado <- Arima(dados_cortado_modelo,order = c(0,0,1),seazonal = c(0,0,1))
modelo_ajustado <- Arima(dados_cortado_modelo,order = c(0,0,1),seasonal = c(0,0,1))
BETS.t_test(modelo_ajustado)
tsdiag(modelo_ajustado)
shapiro.test(modelo_ajustado$residuals)
m = forecast(modelo_ajustado,h=9)$mean
m
plot(m)
plot(forecast(modelo_ajustado,h=9))
dev.off()
plot(forecast(modelo_ajustado,h=9))
plot(dados_cortado_modelo)
ts.plot(dados_cortado_modelo)
lines(m)
ts.plot(dados_cortado)
lines(m)
m
comparacao
ts.plot(dados_cortado,col=2)
lines(m)
tsdiag(modelo_ajustado)
m = forecast(modelo_ajustado,h=9)
m
plot(m)
ts.plot(dados_cortado,col=2)
lines(m)
m
m$x
lines(m$fitted)
m$fitted
m = forecast(modelo_ajustado,h=9)$mean
plot(forecast(modelo_ajustado,h=9))
ts.plot(dados_cortado,col=2)
plot(forecast(modelo_ajustado,h=9))
dados_cortado
ts.plot(dados_cortado,col=2)
ts.plot(dados_cortado)
lines(m,col=2)
plot(m)
m = forecast(modelo_ajustado,h=9)
plot(m)
lines(m,col=2)
plot(forecast(modelo_ajustado,h=9))$mean
m = forecast(modelo_ajustado,h=9)$mean
shapiro.test(modelo_ajustado$residuals)
plot(forecast(modelo_ajustado,h=9))
points(dados_cortado)
plot(forecast(modelo_ajustado,h=9))
lines(dados_cortado)
m
m = forecast(modelo_ajustado,h=9)
m
m = forecast(modelo_ajustado,h=9)mean
m = forecast(modelo_ajustado,h=9)mean
m = forecast(modelo_ajustado,h=9)$mean
x = (comparacao - m)^2
x
sqrt(x)
x = sum((comparacao - m)^2)
x
sqrt(x)
require(BETS)
dados <- ts(dados$serie_3653$Valor,start = c(2002,01),frequency = 12)
require(BETS)
dados <-  BETS.sidra.get(x = c(3653), from = c("200201"), to = c("201710"), territory = "brazil",
variable = 3135, sections = c(129316), cl = 544)
dados <-  BETS.sidra.get(x = c(3653), from = c("200201"), to = c("201710"), territory = "brazil",
variable = 3135, sections = c(129316), cl = 544)
dados <- ts(dados$serie_3653$Valor,start = c(2002,01),frequency = 12)
dados
#modelando a pim
require(forecast)
require(TSA)
modelo = Arima(dados,order= c(3,1,2),seasonal = c(0,1,1),lambda = 0)
tsdiag(modelo)
require(normtest)
shapiro.test(modelo$residuals)
modelo$residuals
modelo$residuals
modelo$residuals
dummy = BETS.dummy(start = c(2002,07),end = c(2017,09),frequency = 12,)
dummy
modelo
BETS.t_test(modelo)
modelo$coef
modelo$mask
modelo$sigma2
modelo$arma
modelo$aic
dummy = BETS.dummy(start = c(2002,07),end = c(2017,09),date = ,frequency = 12)
modelo$residuals
tsdiag(modelo)
modelo$residuals
dummy = BETS.dummy(start = c(2002,07),end = c(2017,09),month =03 ,year = 2008 ,frequency = 12)
dummy
monthplot(dados)
dummy = BETS.dummy(start = c(2002,07),end = c(2017,09),month =03 ,year = 2008 ,frequency = 12)
dummy = BETS.dummy(start = c(2002,07),end = c(2017,09),month =03 ,year = 2008 ,frequency = 12)
modelo2 <- modelo = Arima(dados,order= c(3,1,2),seasonal = c(0,1,1),lambda = 0,xreg=dummy)
modelo2 <- modelo = Arima(dados,order= c(3,1,2),seasonal = c(0,1,1),lambda = 0,xreg=dummy)
dados
dummy = BETS.dummy(start = c(2002,01),end = c(2017,09),month =03 ,year = 2008 ,frequency = 12)
modelo2 <- modelo = Arima(dados,order= c(3,1,2),seasonal = c(0,1,1),lambda = 0,xreg=dummy)
modelo2 <- Arima(dados,order= c(3,1,2),seasonal = c(0,1,1),
lambda = 0,xreg=dummy)
modelo2
BETS.t_test(modelo2)
tsdiag(modelo2)
dummy
modelo$residuals
round(modelo$residuals)
x = mean(modelo$residuals)
x = (modelo$residuals - mean(modelo$residuals))/sd(modelo$residuals)
x
round(x)
dummy = BETS.dummy(start = c(2002,01),end = c(2017,09),month =12 ,year = 2008 ,frequency = 12)
dummy
modelo2 <- Arima(dados,order= c(3,1,2),seasonal = c(0,1,1),
lambda = 0,xreg=dummy)
BETS.t_test(modelo2)
tsdiag(modelo2)
modelo3 <- Arima(dados,order = c(2,1,2),seasonal = c(0,1,1),lambda = 0,xreg=dummy)
modelo3
tsdiag(modelo3)
tsdiag(modelo3)
tsdiag(modelo3)
BETS.t_test(modelo3)
#parece um modelo mais adequado
#verificando normalidade
shapiro.test(modelo3$residuals)
prev = forecast(modelo3$fitted,h=3)
plot(forecast(modelo3$fitted,h=3))
coparacao  = window(dados,start = c(2017,01),freq = 12)
comparacao  = window(dados,start = c(2017,01),freq = 12)
comparacao
dados
pim_cortada1 <- window(dados,start = c(2002,01),end = c(2016,12),freq=12)
pim_cortada1
funcao <- function(h,year,month,dados,modelo,order,seasonal,lambda){
previsoes = c()
n <- length(dados)
#aux <- window(dados,start = c(start(dados)),freq=12)
#aux1<- ts(dados[1:(n-h)],start=start(dados),freq=12)
for(i in h:1){
y <- ts(dados[1:(n-i)],start=start(dados),freq=12)
y_dummy <- ts(dummy[1:(n-i)],start=start(dados),freq=12)
y_dummy_prev = ts(dummy[1:(n-i+1)],start=start(dados),freq=12)
aux2 <- Arima(y,order = order,seasonal = seasonal,lambda = lambda,xreg=y_dummy)
previsoes[i] <- forecast(aux2,h=1,xreg = y_dummy_prev)$mean
}
y <- ts(dados[1:(n-h)],start=start(dados),freq=12)
y_dummy2 = ts(dummy[1:(n-h)],start=start(dados),freq=12)
aux1 <- Arima(y,order = order,seasonal = seasonal,lambda = lambda,xreg=y_dummy2)
y_dummy_prev2 <- ts(dummy[(n-h+1):n],start=start(dados),freq=12)
previsao2 <- forecast(modelo,h=h,xreg = y_dummy_prev2)
return(list(previsoes,previsao2))
}
order = c(2,1,2)
seasonal = c(0,1,1)
lambda = 0
x = funcao(dados = dados,order = order,seasonal = seasonal,lambda=lambda,h=9 )
previsoes = c()
n <- length(dados)
for(i in h:1){
y <- ts(dados[1:(n-i)],start=start(dados),freq=12)
y_dummy <- ts(dummy[1:(n-i)],start=start(dados),freq=12)
y_dummy_prev = ts(dummy[1:(n-i+1)],start=start(dados),freq=12)
aux2 <- Arima(y,order = order,seasonal = seasonal,lambda = lambda,xreg=y_dummy)
previsoes[i] <- forecast(aux2,h=1,xreg = y_dummy_prev)$mean
}
h=9
order = c(2,1,2)
seasonal = c(0,1,1)
lambda = 0
for(i in h:1){
y <- ts(dados[1:(n-i)],start=start(dados),freq=12)
y_dummy <- ts(dummy[1:(n-i)],start=start(dados),freq=12)
y_dummy_prev = ts(dummy[1:(n-i+1)],start=start(dados),freq=12)
aux2 <- Arima(y,order = order,seasonal = seasonal,lambda = lambda,xreg=y_dummy)
previsoes[i] <- forecast(aux2,h=1,xreg = y_dummy_prev)$mean
}
#aux <- window(dados,start = c(start(dados)),freq=12)
#aux1<- ts(dados[1:(n-h)],start=start(dados),freq=12)
i = h
i
y <- ts(dados[1:(n-i)],start=start(dados),freq=12)
y_dummy <- ts(dummy[1:(n-i)],start=start(dados),freq=12)
y_dummy_prev = ts(dummy[1:(n-i+1)],start=start(dados),freq=12)
y
y_dummy <- ts(dummy[1:(n-i)],start=start(dados),freq=12)
y_dummy
y_dummy_prev = ts(dummy[1:(n-i+1)],start=start(dados),freq=12)
y_dummy_prev
y_dummy
y_dummy_prev
y_dummy_prev = ts(dummy[(n-i+1)],start=start(dados),freq=12)
y_dummy_prev
start(dados)
y_dummy_prev = tail(ts(dummy[1:(n-i+1)],start=start(dados),freq=12),1)
y_dummy_prev
y_dummy_prev = tail(ts(dummy[1:(n-i+1)],start=start(dados),freq=12),1)
aux2 <- Arima(y,order = order,seasonal = seasonal,lambda = lambda,xreg=y_dummy)
aux2
previsoes[i] <- forecast(aux2,h=1,xreg = y_dummy_prev)$mean
previsoes
forecast(aux2,h=1,xreg = y_dummy_prev)
a <- forecast(aux2,h=1,xreg = y_dummy_prev)
a$mean
previsoes[i] <- forecast(aux2,h=1,xreg = y_dummy_prev)$mean
previsoes = c()
h
forecast(aux2,h=1,xreg = y_dummy_prev)$mean
previsoes[i] <- forecast(aux2,h=1,xreg = y_dummy_prev)$mean
previsoes[i]
previsoes
for(i in h:1){
y <- ts(dados[1:(n-i)],start=start(dados),freq=12)
y_dummy <- ts(dummy[1:(n-i)],start=start(dados),freq=12)
y_dummy_prev = tail(ts(dummy[1:(n-i+1)],start=start(dados),freq=12),1)
aux2 <- Arima(y,order = order,seasonal = seasonal,lambda = lambda,xreg=y_dummy)
previsoes[i] <- forecast(aux2,h=1,xreg = y_dummy_prev)$mean
}
previsoes
y <- ts(dados[1:(n-h)],start=start(dados),freq=12)
y
y_dummy2 = ts(dummy[1:(n-h)],start=start(dados),freq=12)
y_dummy2
aux1 <- Arima(y,order = order,seasonal = seasonal,lambda = lambda,xreg=y_dummy2)
aux1
y_dummy_prev2 <- ts(dummy[(n-h+1):n],start=start(dados),freq=12)
y_dummy_prev2
y_dummy_prev2 <- ts(dummy[(n-h+1):n],start=end(dados),freq=12)
y_dummy_prev2
y_dummy_prev2 <- ts(dummy[(n-h+1):n],end=end(dados),freq=12)
y_dummy_prev2
previsao2 <- forecast(modelo,h=h,xreg = y_dummy_prev2)
previsao2 <- forecast(modelo,h=h,newdata = y_dummy_prev2)
y_dummy_prev2
previsao2 <- forecast(modelo,h=h,xreg = as.vector(y_dummy_prev2))
previsao2 <- forecast(aux1,h=h,xreg = y_dummy_prev2)
previsao2
previsao2 <- forecast(aux1,h=h,xreg = y_dummy_prev2)$mean
previsao2
ts(previsoes,previsao2)
ts(previsoes,previsao2,freq=12,end=end(dados))
ts(c(previsoes,previsao2),end=end(dados),freq=12)
ts.plot(previsoes,previsao2)
previsoes
previsoes = c()
n <- length(dados)
#aux <- window(dados,start = c(start(dados)),freq=12)
#aux1<- ts(dados[1:(n-h)],start=start(dados),freq=12)
i = h
for(i in h:1){
y <- ts(dados[1:(n-i)],start=start(dados),freq=12)
y_dummy <- ts(dummy[1:(n-i)],start=start(dados),freq=12)
y_dummy_prev = tail(ts(dummy[1:(n-i+1)],start=start(dados),freq=12),1)
aux2 <- Arima(y,order = order,seasonal = seasonal,lambda = lambda,xreg=y_dummy)
previsoes[i] <- forecast(aux2,h=1,xreg = y_dummy_prev)$mean
}
previsoes = ts(previsoes[h:1],end = end(dados),freq = 12)
previsoes
y <- ts(dados[1:(n-h)],start=start(dados),freq=12)
y_dummy2 = ts(dummy[1:(n-h)],start=start(dados),freq=12)
aux1 <- Arima(y,order = order,seasonal = seasonal,lambda = lambda,xreg=y_dummy2)
y_dummy_prev2 <- ts(dummy[(n-h+1):n],end=end(dados),freq=12)
previsao2 <- forecast(aux1,h=h,xreg = y_dummy_prev2)$mean
ts.plot(previsoes,previsao2)
lines(pim,col=2)
lines(dados,col=2)
ts.plot(previsoes,previsao2,col=c(1,4))
lines(dados,col=2)
previsoes
previsao2
modelo3 <- Arima(dados,order = c(2,1,2),seasonal = c(0,1,1),lambda = 0,xreg=dummy)
tsdiag(modelo3)
#criando o modelo com a dummy
modelo2 <- Arima(dados,order= c(3,1,2),seasonal = c(0,1,1),lambda = 0,xreg=dummy)
tsdiag(modelo2)
modelo2
tsdiag(modelo2)
tsdiag(modelo2)
modelo = Arima(dados,order= c(3,1,2),seasonal = c(0,1,1),lambda = 0)
tsdiag(modelo)
x = (modelo$residuals - mean(modelo$residuals))/sd(modelo$residuals)
round(x)
dummy
modelo = Arima(dados,order= c(3,1,2),seasonal = c(0,1,1),lambda = 0)
tsdiag(modelo)
round(x)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
getwd()
knitr::opts_chunk$set(echo = TRUE)
comparacao <-  window(dados, start = c(2017,01),freq=12)
prev <- funcao(h=h,dados=dados,order=order,seasonal = seasonal,lambda = 0)
require(BETS)
require(forecast)
require(normtest)
require(TSA)
require(dygraphs)
require(tidyr)
dados <-  BETS.sidra.get(x = c(3653), from = c("200201"), to = c("201710"), territory = "brazil",variable = 3135, sections = c(129316), cl = 544)
acf(dados,lag.max = 48)
adf.test(dados)
dados_diff <- diff(dados)
acf(diff_dados,lag.max = 48)
dados_diff <- diff(dados)
acf(diff_dados,lag.max = 48)
dados_diff <- diff(dados)
acf(dados_diff,lag.max = 48)
pacf(dados_diff,lag.max = 48)
dados_diff_seasonal = diff(dados_diff,lag=12)
acf(dados_diff_seasonal,lag=48)
adf.test(dados_diff)
install.packages("RPublica")
install.packages("shiny")
getwd()
getwd()
setwd("https://github.com/GreedBlink/trabmd.git")
setwd("https://github.com/GreedBlink/trabmd.git")
setwd("Documents/2017.2/Modelos Lineares I/trabmd")
setwd("https://github.com/GreedBlink/trabmd.git")
getwd()
city_dataset<-read.csv2('city_dataset.csv')
head(city_dataset)
pibpercapita <-city_dataset$pib/city_dataset$populacao
dens_vei     <-city_dataset$veiculos/city_dataset$rodovia
pop1519p     <-city_dataset$pop1519/city_dataset$populacao
pop2024p     <-city_dataset$pop2024/city_dataset$populacao
pop2529p     <-city_dataset$pop2529/city_dataset$populacao
base<-data.frame(cbind(pibpercapita,pop1519p,pop2024p,pop2529p,city_dataset$pjovem,city_dataset$pop60p,
city_dataset$pmotos,city_dataset$pmat,dens_vei))
names(base)[c(5:8)]<-c('pop60p','pjovem','pmotos','pmat')
omega<-cor(base,use = 'complete.obs')
base = cbind(base,cidade =city_dataset$cidade,ano = city_dataset$ano)
base<-data.frame(cbind(pibpercapita,pop1519p,pop2024p,pop2529p,city_dataset$pjovem,city_dataset$pop60p,
city_dataset$pmotos,city_dataset$pmat,dens_vei))
names(base)[c(5:8)]<-c('pop60p','pjovem','pmotos','pmat')
omega<-cor(base,use = 'complete.obs')
head(base)
kmeans_out<-kmeans(na.omit(base[,c('pjovem','pmotos')]),centers = 4)
kmeans_out$size
membros <- kmeans_out$cluster
base<-base[rowSums(is.na(base[,c('pjovem','pmotos','pmat')]))==0,]
city_dataset_cluster <- cbind(base,membros)
ind_acidente<-rowSums(kmeans_out$centers)
city_dataset_cluster<-cbind(city_dataset_cluster,NA)
names(city_dataset_cluster)[dim(city_dataset_cluster)[2]]<-'ind_acidente'
#Adicionando a proxy no banco de dados
for(i in 1:10){
city_dataset_cluster[city_dataset_cluster$membros==i,'ind_acidente']<-ind_acidente[i]
}
plot(city_dataset_cluster$pjovem,city_dataset_cluster$pmotos,xlab="Porporção de jovens", ylab="Proporção de motos")
points(kmeans_out$centers,pch=19,col=2)
